<template>
  <div>
    <div class="ins-t">订单查询结果
    </div>
    <div style="padding:15px;">
      <el-table :data="tableData" border style="font-size: 13px;" v-loading="loading" element-loading-text="拼命加载中" max-height="550">
        <el-table-column type="index" width="50" label="序号">
          <el-button-group> </el-button-group>
        </el-table-column>
        <!-- <el-button-group>{{index}}</el-button-group> -->
        <el-table-column inline-template label="手机号" width="120">
          <el-button-group> {{row.account}}</el-button-group>
        </el-table-column>
        <el-table-column inline-template label="订单号" width="140">
          <el-button-group>
            <span v-colors="'red'">{{row.orderId |order-numbera}}</span>{{row.orderId|order-numberb}}
          </el-button-group>
        </el-table-column>
        <el-table-column prop="type" label="类型" width="50">
        </el-table-column>
        <el-table-column prop="lotteryName" label="彩种" width="80">
        </el-table-column>

        <el-table-column label="订单详情" inline-template min-width="100">
          <el-button-group style="overflow: hidden;">
            <span @click='handleClick(row)' style="text-decoration:underline;cursor:pointer;" alt='点击查看详情'>{{row.orderDescUsr}}</span>
          </el-button-group>
        </el-table-column>
                <el-table-column prop="winPid" label="期次" width="80">
        </el-table-column>
        <el-table-column inline-template label="订单状态" width="80">
          <el-button-group> {{row.orderStatus | order-status}}</el-button-group>
        </el-table-column>
        <el-table-column prop="betCount" label="注数" width="50">
        </el-table-column>
        <el-table-column prop="betDouble" label="倍数" width="50">
        </el-table-column>
        <el-table-column prop="orderMoney" label="投注金额(¥)" width="93">
        </el-table-column>
        <el-table-column prop="winMoney" label="中奖金额(¥)" width="93">
        </el-table-column>
        <el-table-column prop="betType" inline-template label="类型" width="50">
          <el-button-group> {{row.betType|order-type}}</el-button-group>
        </el-table-column>
        <el-table-column prop="chnKey" label="渠道号" width="100">
        </el-table-column>
        <el-table-column prop="chnName" label="渠道名称" width="100">
        </el-table-column>
      </el-table>
      <el-dialog title="订单详情" :visible.sync="dialogTableVisible">
        <!-- 竞彩 -->
        <el-table :data="orderticket" style="width: 100%" border max-height='400' class='tickcot'>
          <el-table-column type="index" width="50" label="序号">
          </el-table-column>
          <el-table-column inline-template label="玩法" width="90">
            <el-button-group>
              <span v-if='ordertype'>{{row.ticketContext|order-play}}</span>
              <span v-if='!ordertype'>{{ticketcotb(row.ticketContext,true)}}</span>
            </el-button-group>
          </el-table-column>
          <el-table-column inline-template label="投注详情" min-width="150">
            <el-button-group>
              <span v-if='ordertype'>{{ticketcota(row.ticketContext)}}</span>
              <span v-if='!ordertype'>{{ticketcotb(row.ticketContext,false)}}</span>
            </el-button-group>
          </el-table-column>
          <el-table-column inline-template label="中奖状态" min-width="70">
            <el-button-group> {{row.awardResult|order-result}}</el-button-group>
          </el-table-column>
          <el-table-column inline-template label="出票状态" min-width="70">
            <el-button-group> {{tstatus(row.ticketStatus)}}</el-button-group>
          </el-table-column>
          <el-table-column prop="ticketBetCount" label="注数" min-width="45">
          </el-table-column>
          <el-table-column prop="ticketBetDouble" label="倍数" min-width="45">
          </el-table-column>
          <el-table-column prop="ticketBetMoney" label="金额(¥)" min-width="60">
          </el-table-column>
        </el-table>
      </el-dialog>
      <div class="PagePilot">
        <pagepilots :pcount='countpage' :psize='pagesizes' :pnums='currentpage' @size-change='pagesizesc' @num-change='currentpagec'></pagepilots>
      </div>
    </div>
  </div>
</template>
<script>
import pagepilots from '../components/pagePilots'
export default {
  props: ['message'],
  data() {
    return {
      ticketcot: '',
      gridDatas: '',
      loading: false,
      dialogTableVisible: false,
      pagesizes: 30,
      countpage: 1,
      currentpage: 1,
      tableData: [],
      orderticket: [],
      ordertype: false,
      types: ''
    }
  },
  components: {
    pagepilots
  },
  computed: {

  },
  methods: {
    ticketcota(a) {
      const f = this.orderdeal();
      var temp = f.detailsZ(a);
      for (var x in temp) {
        temp[x] = temp[x].join(',');
      }
      return temp.join('; ')
    },
    ticketcotb(a, b) {
      const f = this.orderdeal();
      var temp = f.detailsS(a, this.types);
      if (b) return temp[0].play;
      else return temp[0].bets;
    },
    tstatus(a) {
      if (a == '10000' || a == '22' || a == '30' || a == '31') return '出票成功';
      else return '出票失败';
    },
    pagesizesc(a) {
      this.pagesizes = a;
    },
    currentpagec(a) {
      this.currentpage = a;
    },
    getlist: async function(a) {
      if (a == 1) {
        this.message.pageNumber = 1;
        this.currentpage = 1;
      }
      const result = await this.http.default.post('/open/service/bet/order/list', this.message)
      if (result.status == 200) {
        this.tableData = result.data.list;
        this.pagesizes = result.data.pageSize;
        this.countpage = result.data.totalCount;
        this.currentpage = result.data.pageNumber;
      } else {
        this.tableData = [];
        this.countpage = 1;
        this.currentpage = 1;
      }
    },
    handleClick(val) {
      this.orderticket = [];
      this.types = val.lotteryType;
      if (val.lotteryType == 1 || val.lotteryType == 2) { this.ordertype = true; } else {
        this.ordertype = false;
      }
      this.ordercot(val)
      this.dialogTableVisible = true;
    },
    ordercot: async function(val) {
      const result = await this.http.default.post('/open/service/bet/order/detail', {
        orderId: val.orderId,
        token: this.$store.state.userInfo.token
      })
      if (result.status == 200) {
        this.orderticket = result.data.tickets;
      }
    }
  },
  mounted() {
    this.loading == false;

  },
  watch: {
    pagesizes: function(val, oldVal) {
      this.message.pageSize = val;
      this.getlist(1);
    },
    currentpage: function(val, oldVal) {
      this.message.pageNumber = val;
      this.getlist();
    },
  }
}

</script>
<style>
.el-table .cell {
  padding: 0px 9px !important;
  max-height: 25px !important;
  line-height: 30px !important;
}


.tickcot .cell {
  max-height: none !important;
  line-height: 30px !important;
}

.ins-t {
  height: 30px;
  line-height: 30px;
  background-color: #CBEDF1;
  padding: 0 10px;
  font-size: 15px;
}

.PagePilot {
  float: right;
  margin: 10px 0;
}


.el-table__row td:nth-child(1) {
  text-align: center;
}

.el-table__row td {
  padding: 0 !important;
  height: 30px !important;
  line-height: 30px !important;
}

.list-jzx {
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

</style>
