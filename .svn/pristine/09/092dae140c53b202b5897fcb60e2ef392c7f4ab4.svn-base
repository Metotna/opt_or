<template>
  <div class="inquiry-alls">
    <div class="inquiry-search" v-show='conditionflag'>
      <div class="ins-t">订单查询条件
        <el-button type="primary" size="small" style="float:right;margin:1px 5px;" icon="caret-bottom" @click='quirylist=!quirylist' v-if='!quirylist'>展开</el-button>
        <el-button type="primary" size="small" style="float:right;margin:1px 5px;" icon="caret-top" @click='quirylist=!quirylist' v-if='quirylist'>收起</el-button>
        <el-button type="danger" size="small" style="float:right;width:100px;margin:1px 5px;" @click='checkdata' icon="search">查询</el-button>
      </div>
      <transition name="el-fade-in-linear">
        <div style="padding:15px;overflow:hidden;width:100%" v-if='quirylist'>
          <div class="block"> <span>起止时间</span>
            <el-date-picker v-model="timeslot" type="daterange" align="right" placeholder="选择日期范围" :picker-options="pickerOptions2" @change='gettime' size="small">
            </el-date-picker>
          </div>
          <div class="block"> <span>彩种</span>
            <el-select v-model="lotteryType" placeholder="请选择" style="width:220px;" @change='getStatus(0,lotteryType)' size="small">
              <el-option v-for="item in optiona" :key="item.id" :value="item.name">
              </el-option>
            </el-select>
          </div>
          <div class="block"> <span>货币类型</span>
            <el-select v-model="temptype" clearable placeholder="请选择" style="width:220px;" @change='getStatus(1,temptype)' disabled size="small">
              <!-- <el-option v-for="(item,index)  in optiond" :key="index" :value="item.name">
            </el-option> -->
            </el-select>
          </div>
          <div class="block"><span>渠道名称</span>
            <el-input v-model="queryobj.chnName" placeholder="请输入渠道名称" style="width:220px;" size="small"></el-input>
          </div>
          <div class="block"><span>渠道号</span>
            <el-input v-model="queryobj.chnKey" placeholder="请输入渠道号" style="width:220px;" size="small"></el-input>
          </div>
          <div class="block"><span>期次</span>
            <el-input v-model="queryobj.winPid" placeholder="请输入期次" style="width:220px;" size="small"></el-input>
          </div>
          <div class="block"><span>手机号</span>
            <el-input v-model="queryobj.account" placeholder="请输入手机号码" size="small" style="width:220px;"></el-input>
          </div>
          <div class="block"><span>订单号</span>
            <el-input v-model="queryobj.orderId" placeholder="请输入订单号" size="small" style="width:220px;"></el-input>
          </div>
          <div class="block"> <span>订单状态</span>
            <el-select v-model="orderStatus" placeholder="请选择" size="small" style="width:220px;" @change='getStatus(2,orderStatus)'>
              <el-option v-for="(item,index) in optionstatus" :key="index" :value="item.name">
              </el-option>
            </el-select>
          </div>
          <div class="block"> <span>订单类型</span>
            <el-select v-model="queryobj.betType" placeholder="请选择" size="small" style="width:220px;">
              <el-option v-for="item in optione" :key="item.id" :value="item.id" :label='item.value'>
              </el-option>
            </el-select>
          </div>
          <!--         <select v-model='orderStatus'>
          <option  v-for="a in optionstatus">{{a.value}}</option>
        </select> -->
        </div>
      </transition>
    </div>
    <div class="inquiry-cot" ref='inquirycot'>
      <keep-alive>
        <order-list :message="queryobj" ref="orderl" :szflag='quirylist'></order-list>
      </keep-alive>
    </div>
  </div>
</template>
<script>
import orderList from './orderlist'
export default {
  data() {
    return {
      optiona: [{
        id: 404,
        name: '查询中...'
      }],
      optione: [{
          id: '-1',
          value: '全部'
        },
        {
          id: '0',
          value: '普通'
        },
        {
          id: '1',
          value: '追加'
        }, {
          id: '2',
          value: '包中'

        }
      ],
      optiond: [{
          id: 0,
          name: '全部'
        },
        {
          id: 1,
          name: '现金'
        }, {
          id: 2,
          name: '彩金'
        }, {
          id: 3,
          name: '金币'
        }, {
          id: 4,
          name: '优惠券'
        }
      ],
      optionstatus: [{
          id: 100,
          name: '全部'
        },
        {
          id: 10,
          name: '待出票'
        },
        {
          id: 20,
          name: '待开奖'
        },
        {
          id: 10000,
          name: '中奖'
        },
        {
          id: 9000,
          name: '未中奖'
        }, {
          id: 10002,
          name: '已退款'
        }
      ],
      tempchoose: '-1',
      quirylist: true,
      listshow: false,
      timeslot: '',
      orderStatus: '全部',
      temptype: '全部',
      lotteryType: '全部',
      queryobj: {
        token: this.$store.state.userInfo.token, // 用户令牌
        startTime: '', //起始时间
        endTime: '', //终止时间
        lotteryType: '0', //彩种类型
        type: '', //货币类型
        winPid: '', //期次
        account: '', //用户名
        orderId: '', //订单id 
        orderStatus: '100', //订单状态
        betType: '-1',
        chnName: '', //渠道名称
        chnKey: '', //渠道号
        pageSize: 30, //每页记录数
        pageNumber: 1 //页号
      },
      conditionflag: true,
      conditiontext: '展开',
      pickerOptions2: {
        shortcuts: [{
          text: '最近一周',
          onClick(picker) {
            const end = new Date();
            const start = new Date();
            start.setTime(start.getTime() - 3600 * 1000 * 24 * 7);
            picker.$emit('pick', [start, end]);
          }
        }, {
          text: '最近一个月',
          onClick(picker) {
            const end = new Date();
            const start = new Date();
            start.setTime(start.getTime() - 3600 * 1000 * 24 * 30);
            picker.$emit('pick', [start, end]);
          }
        }, {
          text: '最近三个月',
          onClick(picker) {
            const end = new Date();
            const start = new Date();
            start.setTime(start.getTime() - 3600 * 1000 * 24 * 90);
            picker.$emit('pick', [start, end]);
          }
        }]
      }
    };
  },
  components: {
    orderList
  },
  methods: {
    getStatus(a, b) {
      var ary = '';
      switch (a) {
        case 0:
          ary = this.optiona;
          break;
        case 1:
          ary = this.optiond;
          break;
        case 2:
          ary = this.optionstatus;
          break;
      }
      for (var x in ary) {
        if (ary[x].name == b) {
          switch (a) {
            case 0:
              this.queryobj.lotteryType = ary[x].id;
              break;
            case 1:
              this.queryobj.type = ary[x].id;
              break;
            case 2:
              this.queryobj.orderStatus = ary[x].id;
              break;
          }
          console.log(this.queryobj)
          return true
        }
      }
    },
    gettime(ele) {
      if (ele == undefined || ele == "") {
        this.queryobj.startTime = '';
        this.queryobj.endTime = '';
        return
      }
      if (ele != '') {
        this.queryobj.startTime = ele.substring(0, 10);
        this.queryobj.endTime = ele.substring(13);
      }
    },
    lotteryTypes: async function() {
      const result = await this.http.default.post('/open/service/lottery/gid/list', {
        token: this.$store.state.userInfo.token
      })
      if (result) {
        var alls = [{
          id: 0,
          name: '全部'
        }];
        this.optiona = result.data;
        this.optiona = alls.concat(this.optiona);
        this.checkdata();
      } else {
        this.optiona = [{
          id: 500,
          name: '网络请求错误'
        }]
      }
    },
    checkdata() {
      this.listshow = true;
      this.$refs.orderl.getlist();
    }
  },
  watch: {
    // 'queryobj.timeslot': function(val, oldval) {
    //   console.log(val, oldval)
    // }
  },
  mounted() {
    var myDate = new Date()
    myDate.setDate(myDate.getDate() - 4);
    this.timeslot = [myDate, new Date()];
    this.lotteryTypes();
  }
}

</script>
<style scoped>
.inquiry-alls {
  height: 100%;
  min-width: 700px;
  padding-right: 20px;
}

.inquiry-search {
  border: 1px solid #ddd;
  overflow: hidden;
  background-color: #fff;
}

.inquiry-cot {
  margin-top: 5px;
  border: 1px solid #ddd;
  overflow: hidden;
  background-color: #fff;
}

.ins-t {
  height: 32px;
  line-height: 30px;
  background-color: #CBEDF1;
  padding: 0 10px;
  font-size: 15px;
}

.block {
  float: left;
  margin-bottom: 10px;
  margin-right: 10px;
}

.block span {
  width: 70px;
  display: inline-block;
  text-align: right;
  margin-right: 10px;
}



.el-select-dropdown__wrap {
  max-height: none !important;
  overflow: hidden;
}

</style>
